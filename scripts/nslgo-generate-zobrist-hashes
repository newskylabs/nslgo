#!/usr/bin/env python
## =========================================================
## Generating Zobrist hashes
## 
## Usage:
## 
## cd <nslgo-base-dir>
## nslgo-generate-zobrist-hashes > nsl/go/zobrist.py
## ---------------------------------------------------------

import os
import sys
import random

from nsl.go.gotypes import Player, Point

def to_python(player_state):
    if player_state is None:
        return 'None'
    if player_state == Player.black:
        return Player.black
    return Player.white

MAX63 = 0x7fffffffffffffff

table = {}
empty_board = 0
for row in range(1, 20):
    for col in range(1, 20):
        for state in (Player.black, Player.white):
            code = random.randint(0, MAX63)
            table[Point(row, col), state] = code

# Print header
print('## =========================================================')
print('## Zobrist hashes')
print('## ')
print('## Generated by: {}'.format(os.path.basename(sys.argv[0])))
print('## ---------------------------------------------------------')
print('')

# Print Zobrist hashes
print('from .gotypes import Player, Point')
print('')
print("__all__ = ['HASH_CODE', 'EMPTY_BOARD']")
print('')
print('HASH_CODE = {')
for (pt, state), hash_code in table.items():
    print('    (%r, %s): %r,' % (pt, to_python(state), hash_code))
print('}')
print('')
print('EMPTY_BOARD = %d' % (empty_board,))
print('')

# Print footer
print('## =========================================================')
print('## =========================================================')
print('')
print('## fin.')

## =========================================================
## =========================================================

## fin.
